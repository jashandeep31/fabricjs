// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Page {
  id         Int        @id @default(autoincrement())
  uniqueId   String     @unique
  prevUrl    String
  filePath   String
  name       String
  currentUrl String
  updatedAt  DateTime   @updatedAt
  createdAt  DateTime   @default(now())
  Property   Property[]
}

model Property {
  id          Int     @id @default(autoincrement())
  name        String
  description String?

  prevUrl    String
  currentUrl String
  uniqueId   String @unique

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  page   Page @relation(fields: [pageId], references: [id])
  pageId Int

  inherited     Boolean    @default(false)
  inheritedId   Int?
  inheritedFrom Property?  @relation("InheritedFrom", fields: [inheritedId], references: [id])
  properties    Property[] @relation("InheritedFrom")

  // used while inserting and updating the data no role in the data rendering
  interitedFromUniqueId String?
  interitedFinded       Boolean         @default(false)
  interitedExist        Boolean         @default(false)
  PropertyTable         PropertyTable[]
}

model PropertyTable {
  id Int @id @default(autoincrement())

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  property         Property           @relation(fields: [propertyId], references: [id])
  propertyId       Int
  PropertyTableRow PropertyTableRow[]
}

model PropertyTableRow {
  id    Int @id @default(autoincrement())
  order Int

  name        String
  type        String
  attribute   String
  description String?
  extendedRow Boolean @default(false)

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  propertyTable         PropertyTable          @relation(fields: [propertyTableId], references: [id])
  propertyTableId       Int
  ExtendedPropertyTable ExtendedPropertyTable?
}

model ExtendedPropertyTable {
  id Int @id @default(autoincrement())

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  row                      PropertyTableRow           @relation(fields: [propertyTableRowId], references: [id])
  propertyTableRowId       Int                        @unique
  ExtendedPropertyTableRow ExtendedPropertyTableRow[]
}

model ExtendedPropertyTableRow {
  id    Int @id @default(autoincrement())
  order Int

  name        String
  type        String
  attribute   String
  description String

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())

  extendedPropertyTable   ExtendedPropertyTable @relation(fields: [extendedPropertyTableId], references: [id])
  extendedPropertyTableId Int
}
